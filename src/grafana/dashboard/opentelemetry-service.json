{
  "__inputs": [
    {
      "name": "DS_PROMETHEUS-CLUSTER-DESENV",
      "label": "prometheus-cluster-desenv",
      "description": "",
      "type": "datasource",
      "pluginId": "prometheus",
      "pluginName": "Prometheus"
    },
    {
      "name": "DS_PROMETHEUS-CLUSTER-PRODUCTION",
      "label": "prometheus-cluster-production",
      "description": "",
      "type": "datasource",
      "pluginId": "prometheus",
      "pluginName": "Prometheus"
    },
    {
      "name": "DS_TEMPO",
      "label": "tempo",
      "description": "",
      "type": "datasource",
      "pluginId": "tempo",
      "pluginName": "Tempo"
    },
    {
      "name": "DS_LOKI-S3",
      "label": "loki-s3",
      "description": "",
      "type": "datasource",
      "pluginId": "loki",
      "pluginName": "Loki"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "12.0.0"
    },
    {
      "type": "panel",
      "id": "logs",
      "name": "Logs",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "loki",
      "name": "Loki",
      "version": "1.0.0"
    },
    {
      "type": "datasource",
      "id": "prometheus",
      "name": "Prometheus",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "tempo",
      "name": "Tempo",
      "version": "12.0.0"
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "APM dashboard for monitoring OpenTelemetry-based services.  \n\nInstrument your applications using OpenTelemetry SDKs and send traces, metrics, and logs to Tempo for traces, a Prometheus-compatible database like Mimir for metrics, and Loki for logs. This dashboard provides a centralized view of your application's health and performance.  \n\nFor a fully managed observability stack, consider using Grafana Cloud.  \n\nLearn more about this dashboard on https://github.com/cyrille-leclerc/opentelemetry-service-dashboard.",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": null,
  "links": [],
  "liveNow": true,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 42,
      "panels": [],
      "title": "Overview",
      "type": "row"
    },
    {
      "description": "service.namespace=${service_namespace}, service.name=${service_name}, deployment.environment.name=${deployment_environment_name}",
      "gridPos": {
        "h": 2,
        "w": 21,
        "x": 0,
        "y": 1
      },
      "id": 20,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<h1><img src=\"https://opentelemetry.io/img/logos/opentelemetry-logo-nav.png\" alt=\"OpenTelemetry Icon\" width=\"25\" height=\"\"> Service: ${service_namespace}/${service_name} env: ${deployment_environment_name}</h1>\n",
        "mode": "html"
      },
      "pluginVersion": "12.0.0",
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${prometheus_datasource}"
      },
      "description": "Shows the timestamp of the latest metrics received in the past 24h.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#24292e",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 3,
        "x": 21,
        "y": 1
      },
      "hideTimeOverride": true,
      "id": 39,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Time$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS-CLUSTER-DESENV}"
          },
          "editorMode": "code",
          "expr": "timestamp(sum by (deployment_environment_name, service_namespace, exported_job) (target_info{deployment_environment_name=~\"$deployment_environment_name\", service_namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}) or absent{})",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "timeFrom": "now-24h",
      "title": "Latest metrics received",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${prometheus_datasource}"
      },
      "description": "HTTP endpoints aggregation on the `http.server.request.duration` metric.\n\nSee https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverrequestduration",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "log": 10,
              "type": "log"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 8,
        "x": 0,
        "y": 3
      },
      "id": 17,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS-CLUSTER-DESENV}"
          },
          "disableTextWrap": false,
          "editorMode": "code",
          "expr": "histogram_quantile(0.99, sum by(le, namespace, exported_job) (rate(http_server_request_duration_seconds_bucket{namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}[$__rate_interval])))",
          "fullMetaSearch": false,
          "hide": false,
          "includeNullMetadata": true,
          "legendFormat": "P99",
          "range": true,
          "refId": "P99",
          "useBackend": false
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${prometheus_datasource}"
          },
          "disableTextWrap": false,
          "editorMode": "code",
          "expr": "histogram_quantile(0.9, sum by(le, namespace, exported_job) (rate(http_server_request_duration_seconds_bucket{namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}[$__rate_interval])))",
          "fullMetaSearch": false,
          "includeNullMetadata": true,
          "legendFormat": "P90",
          "range": true,
          "refId": "P90",
          "useBackend": false
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS-CLUSTER-DESENV}"
          },
          "disableTextWrap": false,
          "editorMode": "code",
          "expr": "avg by(namespace, exported_job) (rate(http_server_request_duration_seconds_sum{namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}[$__rate_interval])) / avg by(namespace, exported_job) (rate(http_server_request_duration_seconds_count{namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}[$__rate_interval]))",
          "fullMetaSearch": false,
          "hide": false,
          "includeNullMetadata": true,
          "legendFormat": "AVG",
          "range": true,
          "refId": "AVG",
          "useBackend": false
        }
      ],
      "title": "Server Response Time",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${prometheus_datasource}"
      },
      "description": "HTTP endpoints aggregation on the `http.server.request.duration` metric.\n\nSee https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverrequestduration",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "log": 10,
              "type": "log"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 7,
        "x": 8,
        "y": 3
      },
      "id": 19,
      "interval": "60s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS-CLUSTER-DESENV}"
          },
          "editorMode": "code",
          "expr": "(sum(rate(http_server_request_duration_seconds_count{namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}[$__rate_interval])) by (namespace, exported_job)) ",
          "hide": false,
          "legendFormat": "Requests",
          "range": true,
          "refId": "RequestRate"
        }
      ],
      "title": "Server Requests (rate)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${prometheus_datasource}"
      },
      "description": "HTTP endpoints aggregation on the `http.server.request.duration` metric. \n\nErrors are identified by   `http.response.status_code=~\"5..\"`.\n\nSee https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverrequestduration",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 100,
            "axisSoftMin": 0,
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 9,
        "x": 15,
        "y": 3
      },
      "id": 18,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS-CLUSTER-DESENV}"
          },
          "disableTextWrap": false,
          "editorMode": "code",
          "expr": "(sum by(namespace, exported_job) (rate(http_server_request_duration_seconds_count{namespace=~\"$service_namespace\", exported_job=~\"$service_name\", http_response_status_code=~\"5..\"}[$__rate_interval])) * 100) / sum by(namespace, exported_job) (rate(http_server_request_duration_seconds_count{namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}[$__rate_interval]))",
          "fullMetaSearch": false,
          "hide": false,
          "includeNullMetadata": true,
          "instant": false,
          "legendFormat": "5xx",
          "range": true,
          "refId": "5xx",
          "useBackend": false
        }
      ],
      "title": "Failed Requests",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 10
      },
      "id": 22,
      "panels": [],
      "title": "Operations (inbound) e Dependencies (outbound)",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${prometheus_datasource}"
      },
      "description": "Inbound HTTP operations of the service (aka HTTP endpoints) based on the `http.server.request.duration` metric.\n\nErrors are identified by `http.response.status_code=~\"5..\"`.\n\nSee https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverrequestduration",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Duration (p99)"
            },
            "properties": [
              {
                "id": "unit",
                "value": "s"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Rate"
            },
            "properties": [
              {
                "id": "unit",
                "value": "reqps"
              },
              {
                "id": "custom.width",
                "value": 219
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Error"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 11
      },
      "id": 21,
      "interval": "60s",
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Rate"
          }
        ]
      },
      "pluginVersion": "12.0.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS-CLUSTER-DESENV}"
          },
          "disableTextWrap": false,
          "editorMode": "code",
          "expr": "avg_over_time(\n  sum by (operation) (\n    label_join(\n      rate(http_server_request_duration_seconds_count{namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}[$__rate_interval]),\n      \"operation\",\n      \" \",\n      \"http_request_method\",\n      \"http_route\"\n    )\n  )[5m:]\n)",
          "fullMetaSearch": false,
          "includeNullMetadata": true,
          "legendFormat": "{{operation}}",
          "range": true,
          "refId": "RPS",
          "useBackend": false
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${prometheus_datasource}"
          },
          "editorMode": "code",
          "expr": "(\n        sum by (operation) (\n            label_join(\n                rate(http_server_request_duration_seconds_count{namespace=~\"$service_namespace\", exported_job=~\"$service_name\", http_response_status_code=~\"5..\"}[$__rate_interval]),\n                \"operation\",\n                \" \",\n                \"http_request_method\",\n                \"http_route\"\n            )\n        )\n     / \n        sum by (operation) (\n            label_join(\n                rate(http_server_request_duration_seconds_count{namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}[$__rate_interval]),\n                \"operation\",\n                \" \",\n                \"http_request_method\",\n                \"http_route\"\n            )\n        )\n    ) or (0 * \n        sum by (operation) (\n            label_join(\n                rate(http_server_request_duration_seconds_count{namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}[$__rate_interval]),\n                \"operation\",\n                \" \",\n                \"http_request_method\",\n                \"http_route\"\n            )\n        )\n    )",
          "hide": false,
          "instant": false,
          "legendFormat": "{{operation}}",
          "range": true,
          "refId": "ERR_PCT"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS-CLUSTER-DESENV}"
          },
          "editorMode": "code",
          "expr": "\n        histogram_quantile(\n            0.99,\n            sum by (le, operation) (\n                label_join(\n                rate(http_server_request_duration_seconds_bucket{namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}[5m]),\n                \"operation\",\n                \" \",\n                \"http_request_method\",\n                \"http_route\"\n                )\n            )\n        )\n    ",
          "hide": false,
          "instant": false,
          "legendFormat": "{{operation}}",
          "range": true,
          "refId": "Duration"
        }
      ],
      "title": "HTTP Operations",
      "transformations": [
        {
          "id": "timeSeriesTable",
          "options": {
            "Duration": {
              "timeField": "Time"
            },
            "ERR_PCT": {
              "timeField": "Time"
            },
            "RPS": {
              "timeField": "Time"
            }
          }
        },
        {
          "id": "joinByField",
          "options": {
            "byField": "operation",
            "mode": "outer"
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "includeByName": {},
            "indexByName": {
              "Trend #Duration": 1,
              "Trend #ERR_PCT": 2,
              "Trend #RPS": 3,
              "operation": 0
            },
            "renameByName": {
              "Trend #Duration": "Duration (p99)",
              "Trend #ERR_PCT": "Error",
              "Trend #RPS": "Rate",
              "operation": "Operation"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${prometheus_datasource}"
      },
      "description": "Performance - Dependencies",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto",
              "wrapText": false
            },
            "filterable": false,
            "inspect": false
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Duration (P99)"
            },
            "properties": [
              {
                "id": "unit",
                "value": "s"
              },
              {
                "id": "custom.width"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Rate"
            },
            "properties": [
              {
                "id": "unit",
                "value": "reqps"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Error"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 11
      },
      "id": 23,
      "links": [
        {
          "targetBlank": true,
          "title": "google",
          "url": "https://www.google.com.br/"
        }
      ],
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Rate"
          }
        ]
      },
      "pluginVersion": "12.0.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS-CLUSTER-DESENV}"
          },
          "disableTextWrap": false,
          "editorMode": "code",
          "exemplar": false,
          "expr": "avg_over_time(\nsum by (outbound_service) (\n    label_join(\n        rate(http_client_request_duration_seconds_count{namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}[$__rate_interval]),\n        \"outbound_service\",\n        \" \",\n        \"server_address\",\n        \"http_request_method\",\n        \"url_template\"\n    )\n  )[5m:]\n)",
          "fullMetaSearch": false,
          "hide": false,
          "includeNullMetadata": true,
          "instant": false,
          "interval": "",
          "legendFormat": "HTTP: {{http_request_method}} {{server_address}}",
          "range": true,
          "refId": "RPS",
          "useBackend": false
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${prometheus_datasource}"
          },
          "editorMode": "code",
          "expr": "(\n        sum by (outbound_service) (\n            label_join(\n                rate(http_client_request_duration_seconds_count{namespace=~\"$service_namespace\", exported_job=~\"$service_name\", http_response_status_code=~\"5..\"}[$__rate_interval]),\n                \"outbound_service\",\n                \" \",\n                \"server_address\",\n                \"http_request_method\",\n                \"url_template\"\n            )\n        )\n     / \n        sum by (outbound_service) (\n            label_join(\n                rate(http_client_request_duration_seconds_count{namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}[$__rate_interval]),\n                \"outbound_service\",\n                \" \",\n                \"server_address\",\n                \"http_request_method\",\n                \"url_template\"\n            )\n        )\n    ) or (0 * \n        sum by (outbound_service) (\n            label_join(\n                rate(http_client_request_duration_seconds_count{namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}[$__rate_interval]),\n                \"outbound_service\",\n                \" \",\n                \"server_address\",\n                \"http_request_method\",\n                \"url_template\"\n            )\n        )\n    )",
          "hide": false,
          "instant": false,
          "legendFormat": "HTTP: {{http_request_method}} {{server_address}}",
          "range": true,
          "refId": "ERR_PCT"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS-CLUSTER-DESENV}"
          },
          "editorMode": "code",
          "expr": "\nhistogram_quantile(\n    0.99,\n    sum by (le, outbound_service) (\n        label_join(\n        rate(http_client_request_duration_seconds_bucket{namespace=~\"$service_namespace\", exported_job=~\"$service_name\"}[5m]),\n        \"outbound_service\",\n        \" \",\n        \"server_address\",\n        \"http_request_method\",\n        \"url_template\"\n        )\n    )\n)",
          "hide": false,
          "instant": false,
          "legendFormat": "HTTP: {{http_request_method}} {{server_address}}",
          "range": true,
          "refId": "DURATION"
        }
      ],
      "title": "Outbound HTTP Services",
      "transformations": [
        {
          "id": "timeSeriesTable",
          "options": {
            "DURATION": {
              "timeField": ""
            },
            "Duration": {
              "timeField": "Time"
            },
            "ERR_PCT": {
              "timeField": "Time"
            },
            "RPS": {
              "timeField": "Time"
            }
          }
        },
        {
          "id": "joinByField",
          "options": {
            "byField": "outbound_service",
            "mode": "outer"
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "includeByName": {},
            "indexByName": {
              "Trend #DURATION": 1,
              "Trend #ERR_PCT": 2,
              "Trend #RPS": 3,
              "outbound_service": 0
            },
            "renameByName": {
              "Trend #DURATION": "Duration (P99)",
              "Trend #Duration": "Duration (p99)",
              "Trend #ERR_PCT": "Error",
              "Trend #RPS": "Rate",
              "operation": "Operation",
              "outbound_service": "Service"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${prometheus_datasource}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "5xx"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green"
                    },
                    {
                      "color": "red",
                      "value": 1
                    }
                  ]
                }
              },
              {
                "id": "custom.width",
                "value": 92
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "4xx"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green"
                    },
                    {
                      "color": "red",
                      "value": 1
                    }
                  ]
                }
              },
              {
                "id": "custom.width",
                "value": 105
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "3xx"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "2xx"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "custom.width",
                "value": 112
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total time"
            },
            "properties": [
              {
                "id": "unit",
                "value": "ms"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Avg time"
            },
            "properties": [
              {
                "id": "unit",
                "value": "ms"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Error rate"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text",
                  "wrapText": false
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green"
                    },
                    {
                      "color": "#EAB839",
                      "value": 0.01
                    },
                    {
                      "color": "red",
                      "value": 0.1
                    }
                  ]
                }
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "NaN": {
                        "index": 0,
                        "text": "0%"
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Method"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 78
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Requests"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 115
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Errors"
            },
            "properties": []
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Route"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 438
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Avg time"
            },
            "properties": [
              {
                "id": "unit",
                "value": "ms"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 20
      },
      "id": 43,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "2xx"
          }
        ]
      },
      "pluginVersion": "12.0.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS-CLUSTER-PRODUCTION}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "sum(rate(http_server_request_duration_seconds_count{\n  exported_job=~\"$service_name\", \n  http_request_method=~\".*\", \n  http_route=~\".*\", \n  http_route!=\"/healthz\", \n  http_route!=\"\"\n}[5m])) by (exported_job, http_request_method, http_route) * $__interval_ms / 1000",
          "format": "table",
          "instant": false,
          "interval": "",
          "legendFormat": "x",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${prometheus_datasource}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "sum(rate(http_server_request_duration_seconds_count{\n  exported_job=~\"$service_name\", \n  http_request_method=~\".*\", \n  http_response_status_code=~\"2..\", \n  http_route=~\".*\", \n  http_route!=\"/healthz\", \n  http_route!=\"\"\n}[5m])) by (exported_job, http_request_method, http_route) * $__interval_ms / 1000\n",
          "format": "table",
          "hide": false,
          "instant": false,
          "interval": "",
          "legendFormat": "x",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS-CLUSTER-PRODUCTION}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "sum(rate(http_server_request_duration_seconds_count{\n  exported_job=~\"$service_name\", \n  http_request_method=~\".*\", \n  http_response_status_code=~\"3..\", \n  http_route=~\".*\", \n  http_route!~\"/healthz|^$\"\n}[5m])) by (exported_job, http_request_method, http_route) * $__interval_ms / 1000\n",
          "format": "table",
          "hide": false,
          "instant": false,
          "interval": "",
          "legendFormat": "x",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${prometheus_datasource}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "sum(rate(http_server_request_duration_seconds_count{\n  exported_job=~\"$service_name\", \n  http_request_method=~\".*\", \n  http_response_status_code=~\"4..\", \n  http_route=~\".*\", \n  http_route!~\"/healthz|^$\"\n}[5m])) by (exported_job, http_request_method, http_route) * $__interval_ms / 1000\n",
          "format": "table",
          "hide": false,
          "instant": false,
          "interval": "",
          "legendFormat": "x",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS-CLUSTER-PRODUCTION}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "sum(rate(http_server_request_duration_seconds_count{\n  exported_job=~\"$service_name\", \n  http_request_method=~\".*\", \n  http_response_status_code=~\"5..\", \n  http_route=~\".*\", \n  http_route!~\"/healthz|^$\"\n}[5m])) by (exported_job, http_request_method, http_route) * $__interval_ms / 1000\n",
          "format": "table",
          "hide": false,
          "instant": false,
          "interval": "",
          "legendFormat": "x",
          "range": true,
          "refId": "E"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${prometheus_datasource}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "sum(rate(http_server_request_duration_seconds_sum{\n  exported_job=~\"$service_name\", \n  http_request_method=~\".*\", \n  http_route=~\".*\", \n  http_route!~\"/healthz|^$\"\n}[5m])) by (exported_job, http_request_method, http_route) * $__interval_ms / 1000\n",
          "format": "table",
          "hide": false,
          "instant": false,
          "interval": "",
          "legendFormat": "x",
          "range": true,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_PROMETHEUS-CLUSTER-PRODUCTION}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "(\n  sum(rate(http_server_request_duration_seconds_sum{\n    exported_job=~\"$service_name\", \n    http_request_method=~\".*\", \n    http_route=~\".*\", \n    http_route!~\"/healthz|^$\"\n  }[5m])) by (exported_job, http_request_method, http_route) \n  / \n  sum(rate(http_server_request_duration_seconds_count{\n    exported_job=~\"$service_name\", \n    http_request_method=~\".*\", \n    http_route=~\".*\", \n    http_route!~\"/healthz|^$\"\n  }[5m])) by (exported_job, http_request_method, http_route) \n  >= 0\n) OR on() vector(0)",
          "format": "table",
          "hide": false,
          "instant": false,
          "interval": "",
          "legendFormat": "x",
          "range": true,
          "refId": "G"
        }
      ],
      "title": "Requests statistics",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "Time": {
                "aggregations": []
              },
              "Value #A": {
                "aggregations": [
                  "sum"
                ],
                "operation": "aggregate"
              },
              "Value #B": {
                "aggregations": [
                  "sum"
                ],
                "operation": "aggregate"
              },
              "Value #C": {
                "aggregations": [
                  "sum"
                ],
                "operation": "aggregate"
              },
              "Value #D": {
                "aggregations": [
                  "sum"
                ],
                "operation": "aggregate"
              },
              "Value #E": {
                "aggregations": [
                  "sum"
                ],
                "operation": "aggregate"
              },
              "Value #F": {
                "aggregations": [
                  "sum"
                ],
                "operation": "aggregate"
              },
              "Value #G": {
                "aggregations": [
                  "mean"
                ],
                "operation": "aggregate"
              },
              "Value #H": {
                "aggregations": [
                  "allValues"
                ],
                "operation": "aggregate"
              },
              "Value #I": {
                "aggregations": [
                  "allValues"
                ],
                "operation": "aggregate"
              },
              "agent": {
                "aggregations": [],
                "operation": "groupby"
              },
              "http_request_method": {
                "aggregations": [
                  "sum"
                ],
                "operation": "groupby"
              },
              "http_route": {
                "aggregations": [],
                "operation": "groupby"
              },
              "http_target": {
                "aggregations": [],
                "operation": "groupby"
              },
              "instance": {
                "aggregations": [],
                "operation": "groupby"
              },
              "job": {
                "aggregations": [],
                "operation": "groupby"
              },
              "method": {
                "aggregations": [],
                "operation": "groupby"
              },
              "path": {
                "aggregations": [],
                "operation": "groupby"
              },
              "status": {
                "aggregations": [],
                "operation": "groupby"
              }
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "instance": true,
              "job": false
            },
            "includeByName": {},
            "indexByName": {
              "Value #A (sum)": 3,
              "Value #B (sum)": 4,
              "Value #C (sum)": 5,
              "Value #D (sum)": 6,
              "Value #E (sum)": 7,
              "Value #F (sum)": 8,
              "Value #G (mean)": 9,
              "http_request_method": 1,
              "http_route": 2,
              "job": 0
            },
            "renameByName": {
              "Value #A (sum)": "Requests",
              "Value #B (sum)": "2xx",
              "Value #C (sum)": "3xx",
              "Value #D (sum)": "4xx",
              "Value #E (sum)": "5xx",
              "Value #F (sum)": "Total time",
              "Value #G (mean)": "Avg time",
              "Value #G (sum)": "Avg duration",
              "http_request_method": "Method",
              "http_route": "Route",
              "job": "Service"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Errors",
            "binary": {
              "left": "3xx",
              "reducer": "sum",
              "right": "4xx"
            },
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "4xx",
                "5xx"
              ],
              "reducer": "sum"
            },
            "replaceFields": false
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Error rate",
            "binary": {
              "left": {
                "matcher": {
                  "id": "byName",
                  "options": "Errors"
                }
              },
              "operator": "/",
              "right": {
                "matcher": {
                  "id": "byName",
                  "options": "Requests"
                }
              }
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 27
      },
      "id": 29,
      "panels": [
        {
          "datasource": {
            "type": "tempo",
            "uid": "${tempo_datasource}"
          },
          "description": "Traces containing a span emitted by the service",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Trace Service"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Span ID"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": false
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "deployment.environment.name"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "service.name"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "service.namespace"
                },
                "properties": [
                  {
                    "id": "custom.hidden",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Trace Name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 352
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Start time"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 305
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 142
          },
          "id": 30,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "frameIndex": 0,
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "http.response.status_code"
              }
            ]
          },
          "pluginVersion": "12.0.0",
          "targets": [
            {
              "datasource": {
                "type": "tempo",
                "uid": "${DS_TEMPO}"
              },
              "filters": [
                {
                  "id": "service-name",
                  "operator": "=",
                  "scope": "resource",
                  "tag": "service.name",
                  "value": [
                    "$service_name"
                  ],
                  "valueType": "string"
                },
                {
                  "id": "6997e808",
                  "operator": "=",
                  "scope": "resource",
                  "tag": "deployment.environment.name",
                  "value": [
                    "$deployment_environment_name"
                  ],
                  "valueType": "string"
                },
                {
                  "id": "e9f0e855",
                  "operator": "=",
                  "scope": "resource",
                  "tag": "service.namespace",
                  "value": [
                    "$service_namespace"
                  ],
                  "valueType": "string"
                }
              ],
              "limit": 20,
              "metricsQueryType": "range",
              "query": "{resource.service.name=\"$service_name\" && resource.k8s.namespace.name=\"$service_namespace\" && span.http.response.status_code!=202 && span.http.response.status_code!=204 && span.http.response.status_code!=200} | select(span.url.path, span.server.address, span.http.response.status_code)",
              "queryType": "traceql",
              "refId": "A",
              "tableType": "spans"
            }
          ],
          "title": "",
          "type": "table"
        }
      ],
      "title": "Traces - Grafana Tempo.",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 28
      },
      "id": 25,
      "panels": [
        {
          "datasource": {
            "type": "loki",
            "uid": "${loki_datasource}"
          },
          "description": "Logs of the service, filtered by `service.name` and `service.namespace`.\n\nTo explore the logs, open the menu clicking on the icon `⋮` of this panel and click on `Explore`.",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 15,
            "w": 24,
            "x": 0,
            "y": 293
          },
          "id": 26,
          "options": {
            "dedupStrategy": "none",
            "enableInfiniteScrolling": true,
            "enableLogDetails": true,
            "prettifyLogMessage": false,
            "showCommonLabels": false,
            "showLabels": false,
            "showTime": true,
            "sortOrder": "Ascending",
            "wrapLogMessage": false
          },
          "pluginVersion": "12.0.0",
          "targets": [
            {
              "datasource": {
                "type": "loki",
                "uid": "${DS_LOKI-S3}"
              },
              "direction": "backward",
              "editorMode": "code",
              "expr": "{deployment_environment_name=~\"$deployment_environment_name\", service_namespace=~\"$service_namespace\", service_name=\"$service_name\"} | line_format `\u001b[1m{{if .level }}{{alignRight 5 .level}}{{else if .severity_text}}{{alignRight 5 .severity_text}}{{end}}\u001b[0m \u001b[90m[{{alignRight 10 .service_instance_id}}{{if .thread_name}}/{{alignRight 20 .thread_name}}{{else if eq \"java\" .telemetry_sdk_language }}                    {{end}}]\u001b[0m \u001b[36m{{if .scope_name }}{{alignRight 40 .scope_name}}{{end}}{{if .exception_type}} \u001b[1;101m \u001b[0m{{end}} {{if .exception_type}}\u001b[1;91m{{.exception_type}}\u001b[0m{{end}}{{if .exception_message}} \u001b[1;91m{{.exception_message}}\u001b[0m {{end}} \u001b[0m {{__line__}} {{if .trace_id}} \u001b[37m\u001b[3m[trace_id={{.trace_id}}]{{end}}`",
              "queryType": "range",
              "refId": "A"
            }
          ],
          "title": "",
          "type": "logs"
        }
      ],
      "title": "Logs (em desenvolvimento).",
      "type": "row"
    }
  ],
  "refresh": "",
  "schemaVersion": 41,
  "tags": [],
  "templating": {
    "list": [
      {
        "allowCustomValue": false,
        "current": {},
        "description": "OpenTelemetry metrics. \nSend metrics using the Prometheus OTLP endpoint activating `keep_identifying_resource_attributes` and resource attribute promotion (aka `promote_resource_attributes`) including `service.name`, service.namespace`, `service.instance.id`, and `deployment.environment.name`",
        "label": "Metrics",
        "name": "prometheus_datasource",
        "options": [],
        "query": "prometheus",
        "refresh": 1,
        "regex": "",
        "type": "datasource"
      },
      {
        "allowCustomValue": false,
        "current": {},
        "description": "OpenTelemetry traces",
        "label": "Traces",
        "name": "tempo_datasource",
        "options": [],
        "query": "tempo",
        "refresh": 1,
        "regex": "",
        "type": "datasource"
      },
      {
        "allowCustomValue": false,
        "current": {},
        "description": "OpenTelemetry logs.\n\nSend logs using the Loki OTLP endpoint activating resource attribute promotion (aka `default_resource_attributes_as_index_labels`) including `service.name`, service.namespace`, and `deployment.environment.name`",
        "label": "Logs",
        "name": "loki_datasource",
        "options": [],
        "query": "loki",
        "refresh": 1,
        "regex": "",
        "type": "datasource"
      },
      {
        "allowCustomValue": false,
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${prometheus_datasource}"
        },
        "definition": "label_values(target_info,deployment_environment_name)",
        "description": "Deployment environment (e.g. \"production\").\nResource attribute `deployment.environment.name` via `target_info`",
        "includeAll": false,
        "label": "Environment",
        "name": "deployment_environment_name",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(target_info,deployment_environment_name)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "allowCustomValue": false,
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_PROMETHEUS-CLUSTER-PRODUCTION}"
        },
        "definition": "label_values(target_info{deployment_environment_name=~\"$deployment_environment_name\"},service_namespace)",
        "description": "Service namespace.\nResource attribute `service.namespace` via `target_info`",
        "includeAll": false,
        "label": "Namespace",
        "name": "service_namespace",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(target_info{deployment_environment_name=~\"$deployment_environment_name\"},service_namespace)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "allValue": ".*",
        "allowCustomValue": false,
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${prometheus_datasource}"
        },
        "definition": "label_values(target_info{service_namespace=~\"$service_namespace\", deployment_environment_name=~\"$deployment_environment_name\"},k8s_container_name)",
        "description": "Service name.\nResource attribute `service.name` via `target_info`.",
        "includeAll": true,
        "label": "Name",
        "name": "service_name",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(target_info{service_namespace=~\"$service_namespace\", deployment_environment_name=~\"$deployment_environment_name\"},k8s_container_name)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "baseFilters": [],
        "datasource": {
          "type": "prometheus",
          "uid": "${prometheus_datasource}"
        },
        "filters": [],
        "name": "Filters",
        "type": "adhoc"
      }
    ]
  },
  "time": {
    "from": "now-15m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "APM for OpenTelemetry",
  "uid": "febljk0a32qyoa2",
  "version": 63,
  "weekStart": ""
}